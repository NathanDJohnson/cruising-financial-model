diff --git a/index.html b/index.html
index 83a7d33..9749f4f 100644
--- a/index.html
+++ b/index.html
@@ -57,6 +57,13 @@
             simulationYears: 30,
             // New parameters for improved modeling
             loanInterestRate: 5.0, // annual interest rate (%) for the boat loan
+            // fraction of capex that increases boat value by default (0..1)
+            capExValueRetentionRate: 0.6,
+            // alias kept for backwards-compatibility
+            capexRetentionRate: 0.6,
+            // fraction of refit cost that increases boat value; if null, falls back to capExValueRetentionRate
+            refitValueRetentionRate: null,
+            refitRetentionRate: null,
             capitalGainsRealizationRate: 1.0, // fraction of paper gains realized each year (1.0 = 100% realized, 0 = never realized)
             randomSeed: null, // if set, makes phase3 income deterministic per user
             capitalExpenditures: [
@@ -195,6 +202,8 @@
             let emergencyFund = parseFloat(state.initialEmergencyFund);
             const initialEmergencyFundValue = emergencyFund;
             let boatValue = parseFloat(state.initialBoatValue);
+            // Track boat basis separately for more accurate capital gains handling when implemented
+            let boatBasis = (typeof state._boatBasis !== 'undefined') ? Number(state._boatBasis) : parseFloat(state.initialBoatValue);
             let loanBalance = parseFloat(state.boatLoan);
             let currentMonth = 0;
             const simulationData = [];
@@ -225,13 +234,25 @@
                 let sumMonthlyNetCashFlow = 0;
                 let currentPhase = 0;
                 let initialNetWorthThisYear = nw;
-                // Check for planned capital expenditures: aggregate all capex for the year
-                const yearCapExTotal = state.capitalExpenditures
+                // Process each capital expenditure for the year.
+                // Capital expenditures are deducted from cash; a configurable fraction can be capitalized to increase boat value.
+                const retentionDefault = Math.max(0, Math.min(1, Number(state.capExValueRetentionRate) || 0.6));
+                state.capitalExpenditures
                     .filter(ce => Number(ce.year) === year)
-                    .reduce((s, ce) => s + (Number(ce.cost) || 0), 0);
-                if (yearCapExTotal) {
-                    nw -= yearCapExTotal;
-                }
+                    .forEach(ce => {
+                        const cost = Number(ce.cost) || 0;
+                        if (cost <= 0) return;
+                        // cash outflow
+                        nw -= cost;
+                        // decide whether to capitalize this item (default: true)
+                        const capitalize = (typeof ce.capitalize === 'boolean') ? ce.capitalize : true;
+                        const retention = (typeof ce.valueRetention === 'number') ? Math.max(0, Math.min(1, ce.valueRetention)) : retentionDefault;
+                        if (capitalize && retention > 0) {
+                            const addedValue = cost * retention;
+                            boatValue += addedValue;
+                            boatBasis = (boatBasis || 0) + addedValue;
+                        }
+                    });
 
                 for (let month = 0; month < 12; month++) {
                     currentMonth++;
@@ -246,7 +267,17 @@
                         expenses = p1Expenses;
                         currentPhase = 1;
                         if (currentMonth === 1) {
-                            nw -= parseFloat(state.phase1RefitCost);
+                            const refitCost = parseFloat(state.phase1RefitCost) || 0;
+                            if (refitCost > 0) {
+                                nw -= refitCost;
+                                const refitRetention = (state.refitValueRetentionRate !== null && typeof state.refitValueRetentionRate !== 'undefined') ?
+                                    Math.max(0, Math.min(1, Number(state.refitValueRetentionRate))) : retentionDefault;
+                                if (refitRetention > 0) {
+                                    const added = refitCost * refitRetention;
+                                    boatValue += added;
+                                    boatBasis = (boatBasis || 0) + added;
+                                }
+                            }
                         }
                     } else if (currentMonth <= parseFloat(state.phase1Duration) + parseFloat(state.phase2Duration)) {
                         expenses = p2Fixed + p2Variable + p2Maintenance;
@@ -353,6 +384,9 @@
             populateTable(simulationData);
             populateCapExTable();
             // Pass final net worth after subtracting remaining loan balance
+            // Update displayed basis element (do not persist simulation-computed basis)
+            const basisEl = document.getElementById('boatBasisDisplay');
+            if (basisEl) basisEl.textContent = `Boat basis: ${formatCurrency(boatBasis)}`;
             displayResults(nw + boatValue + emergencyFund - loanBalance);
         };
 
@@ -363,6 +397,7 @@
             if (!userId) return;
             try {
                 const key = persistenceKeyForUser(userId);
+                // Do not auto-persist ephemeral simulation boat basis; only user edits should set _boatBasis
                 // Make a shallow copy suitable for storage and add metadata
                 const dataToSave = { ...state, _meta: { lastSaved: new Date().toISOString() } };
                 localStorage.setItem(key, JSON.stringify(dataToSave));
@@ -397,6 +432,17 @@
                         cost: Number(ce.cost) || 0,
                         year: parseInt(ce.year, 10) || 0
                     }));
+                    // Backwards compatibility: alias older retention keys
+                    if (typeof data.capexRetentionRate !== 'undefined' && typeof data.capExValueRetentionRate === 'undefined') {
+                        data.capExValueRetentionRate = Number(data.capexRetentionRate);
+                    }
+                    if (typeof data.refitRetentionRate !== 'undefined' && typeof data.refitValueRetentionRate === 'undefined') {
+                        data.refitValueRetentionRate = Number(data.refitRetentionRate);
+                    }
+                    // Ensure boat basis persists across saves/loads
+                    if (typeof data._boatBasis !== 'undefined') {
+                        data._boatBasis = Number(data._boatBasis);
+                    }
                     // Remove meta before merging
                     const { _meta, ...rest } = data;
                     Object.assign(state, rest);
@@ -430,11 +476,22 @@
                 }
             });
             populateCapExTable();
+            // Update boat basis display if present
+            const basis = (typeof state._boatBasis !== 'undefined') ? Number(state._boatBasis) : Number(state.initialBoatValue);
+            const basisEl = document.getElementById('boatBasisDisplay');
+            if (basisEl) basisEl.textContent = `Boat basis: ${formatCurrency(basis)}`;
+            const capEl = document.getElementById('retentionRatesDisplay');
+            if (capEl) {
+                const cap = Number(state.capExValueRetentionRate || state.capexRetentionRate || 0.6) * 100;
+                const ref = (state.refitValueRetentionRate !== null && typeof state.refitValueRetentionRate !== 'undefined') ? Number(state.refitValueRetentionRate) * 100 : cap;
+                capEl.textContent = `CapEx retention: ${Math.round(cap)}% | Refit retention: ${Math.round(ref)}%`;
+            }
         };
 
         const setupListeners = () => {
             const inputNames = [
                 'initialNetWorth', 'initialEmergencyFund', 'initialBoatValue', 'boatLoan', 'monthlyLoanPayment', 'loanInterestRate', 'annualReturn', 'inflationRate', 'longTermCapitalGainsTaxRate',
+                'capExValueRetentionRate', 'refitValueRetentionRate',
                 'phase1Duration', 'phase1MonthlyIncome', 'phase1MonthlyExpenses', 'phase1RefitCost',
                 'phase2Duration', 'phase2FixedExpenses', 'phase2VariableExpenses', 'phase2MaintenanceFund',
                 'phase3MinIncome', 'phase3MaxIncome', 'phase3FixedExpenses', 'phase3VariableExpenses', 'phase3MaintenanceFund',
@@ -448,7 +505,12 @@
                     element.addEventListener('input', (e) => {
                         // coerce numeric inputs to numbers where appropriate
                         const val = e.target.value;
-                        state[name] = val;
+                        // Try to interpret empty string as null for the refit retention field
+                        if (name === 'refitValueRetentionRate' && val === '') {
+                            state[name] = null;
+                        } else {
+                            state[name] = val;
+                        }
                         runSimulation();
                         saveToLocalStorage();
                     });
@@ -484,7 +546,7 @@
     <div class="max-w-7xl mx-auto bg-white rounded-xl shadow-2xl p-6 md:p-12 space-y-8">
         <header class="text-center space-y-2">
             <h1 class="text-4xl font-bold text-gray-900">The Cruising Financial Framework</h1>
-            <p class="text-lg text-gray-600">This model is designed around the "golden prompt" for a phased transition to a life at sea, recognizing that a sustainable cruising lifestyle is a marathon, not a sprint.  Plan your journey and ensure your finances can support the dream.</p>
+            <p class="text-lg text-gray-600">This model is designed around a phased transition to a life at sea, recognizing that a sustainable cruising lifestyle is a marathon, not a sprint.  Plan your journey and ensure your finances can support the dream.</p>
             <div id="userIdDisplay" class="text-sm font-mono text-gray-400 mt-2">Authenticating...</div>
         </header>
 
@@ -496,43 +558,63 @@
                     <div class="grid md:grid-cols-2 gap-4">
                         <div>
                             <label for="initialNetWorth" class="block text-sm font-medium text-gray-700">Initial Cash/Investments ($)</label>
-                            <input type="number" id="initialNetWorth" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="initialNetWorth" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Total liquid cash & investments you can draw on today (exclude boat equity).</p>
                         </div>
                         <div>
                             <label for="initialEmergencyFund" class="block text-sm font-medium text-gray-700">Dedicated Emergency Fund ($)</label>
-                            <input type="number" id="initialEmergencyFund" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="initialEmergencyFund" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Dedicated cash set aside for emergencies. Aim for 3–6 months of expenses.</p>
                         </div>
                         <div>
                             <label for="initialBoatValue" class="block text-sm font-medium text-gray-700">Initial Boat Value ($)</label>
-                            <input type="number" id="initialBoatValue" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="initialBoatValue" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Estimated current market value of your boat.</p>
                         </div>
                         <div>
                             <label for="boatLoan" class="block text-sm font-medium text-gray-700">Boat Loan Amount ($)</label>
-                            <input type="number" id="boatLoan" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="boatLoan" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Outstanding principal on your boat loan (enter 0 if none).</p>
                         </div>
                          <div>
                             <label for="monthlyLoanPayment" class="block text-sm font-medium text-gray-700">Monthly Loan Payment ($)</label>
-                            <input type="number" id="monthlyLoanPayment" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="monthlyLoanPayment" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Your monthly payment toward the boat loan (interest + principal).</p>
                         </div>
                         <div>
                             <label for="loanInterestRate" class="block text-sm font-medium text-gray-700">Loan Interest Rate (%)</label>
-                            <input type="number" id="loanInterestRate" step="0.01" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2" value="5.0">
+                            <input type="number" step="0.01" id="loanInterestRate" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2" value="5.0">
+                            <p class="text-xs text-gray-500 mt-1">Annual interest rate on the boat loan (percent).</p>
                         </div>
                         <div>
                             <label for="annualReturn" class="block text-sm font-medium text-gray-700">Annual Return on Investments (%)</label>
-                            <input type="number" id="annualReturn" step="0.1" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="0.1" id="annualReturn" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Expected long-term annual return on investments (use a conservative number).</p>
+                        </div>
+                        <div>
+                            <label for="capExValueRetentionRate" class="block text-sm font-medium text-gray-700">CapEx Retention Rate (0-1)</label>
+                            <input type="number" step="0.01" id="capExValueRetentionRate" min="0" max="1" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Fraction (0–1) of CapEx that is capitalized into boat value (default 0.6).</p>
+                        </div>
+                        <div>
+                            <label for="refitValueRetentionRate" class="block text-sm font-medium text-gray-700">Refit Retention Rate (0-1)</label>
+                            <input type="number" step="0.01" id="refitValueRetentionRate" min="0" max="1" placeholder="leave blank to use CapEx rate" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Fraction (0–1) of refit cost capitalized; leave blank to use CapEx retention rate.</p>
                         </div>
                         <div>
                             <label for="longTermCapitalGainsTaxRate" class="block text-sm font-medium text-gray-700">Capital Gains Tax Rate (%)</label>
-                            <input type="number" id="longTermCapitalGainsTaxRate" step="0.1" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="0.1" id="longTermCapitalGainsTaxRate" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Expected long-term capital gains tax rate in your jurisdiction (percent).</p>
                         </div>
                         <div>
                             <label for="inflationRate" class="block text-sm font-medium text-gray-700">Inflation Rate (%)</label>
-                            <input type="number" id="inflationRate" step="0.1" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="0.1" id="inflationRate" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Annual inflation rate used to escalate expenses (percent).</p>
                         </div>
                         <div>
                             <label for="simulationYears" class="block text-sm font-medium text-gray-700">Simulation Years</label>
-                            <input type="number" id="simulationYears" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="simulationYears" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">How many years to project (longer horizons compound effects).</p>
                         </div>
                     </div>
                 </section>
@@ -543,19 +625,23 @@
                     <div class="grid md:grid-cols-2 gap-4">
                         <div>
                             <label for="phase1Duration" class="block text-sm font-medium text-gray-700">Duration (Months)</label>
-                            <input type="number" id="phase1Duration" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="phase1Duration" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Length of refit/saving period in months.</p>
                         </div>
                         <div>
                             <label for="phase1MonthlyIncome" class="block text-sm font-medium text-gray-700">Gross Monthly Income ($)</label>
-                            <input type="number" id="phase1MonthlyIncome" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="phase1MonthlyIncome" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Gross monthly income during Phase 1 (before taxes).</p>
                         </div>
                         <div>
                             <label for="phase1MonthlyExpenses" class="block text-sm font-medium text-gray-700">Monthly Living Expenses ($)</label>
-                            <input type="number" id="phase1MonthlyExpenses" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="phase1MonthlyExpenses" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Typical monthly living expenses during Phase 1.</p>
                         </div>
                         <div>
                             <label for="phase1RefitCost" class="block text-sm font-medium text-gray-700">One-Time Refit Cost ($)</label>
-                            <input type="number" id="phase1RefitCost" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="phase1RefitCost" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">One-time refit cost at the start of cruising; part may be capitalized into boat value.</p>
                         </div>
                     </div>
                 </section>
@@ -566,19 +652,23 @@
                     <div class="grid md:grid-cols-2 gap-4">
                         <div>
                             <label for="phase2Duration" class="block text-sm font-medium text-gray-700">Duration (Months)</label>
-                            <input type="number" id="phase2Duration" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="phase2Duration" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Length of short sabbatical (months) with reduced/no income.</p>
                         </div>
                         <div>
                             <label for="phase2FixedExpenses" class="block text-sm font-medium text-gray-700">Fixed Monthly Expenses ($)</label>
-                            <input type="number" id="phase2FixedExpenses" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="phase2FixedExpenses" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Regular fixed monthly costs while not working (marina, insurance, loan payments).</p>
                         </div>
                         <div>
                             <label for="phase2VariableExpenses" class="block text-sm font-medium text-gray-700">Variable Monthly Expenses ($)</label>
-                            <input type="number" id="phase2VariableExpenses" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="phase2VariableExpenses" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Variable monthly costs (fuel, provisions, occasional repairs).</p>
                         </div>
                         <div>
                             <label for="phase2MaintenanceFund" class="block text-sm font-medium text-gray-700">Maintenance Fund (Monthly) ($)</label>
-                            <input type="number" id="phase2MaintenanceFund" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="phase2MaintenanceFund" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Monthly set-aside for planned maintenance and small repairs.</p>
                         </div>
                     </div>
                 </section>
@@ -589,23 +679,28 @@
                     <div class="grid md:grid-cols-2 gap-4">
                          <div>
                             <label for="phase3MinIncome" class="block text-sm font-medium text-gray-700">Min Monthly Income ($)</label>
-                            <input type="number" id="phase3MinIncome" step="100" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="100" id="phase3MinIncome" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Lower bound of expected monthly income during cruising (side work).</p>
                         </div>
                         <div>
                             <label for="phase3MaxIncome" class="block text-sm font-medium text-gray-700">Max Monthly Income ($)</label>
-                            <input type="number" id="phase3MaxIncome" step="100" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="100" id="phase3MaxIncome" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Upper bound of expected monthly income during cruising.</p>
                         </div>
                         <div>
                             <label for="phase3FixedExpenses" class="block text-sm font-medium text-gray-700">Fixed Monthly Expenses ($)</label>
-                            <input type="number" id="phase3FixedExpenses" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="phase3FixedExpenses" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Fixed monthly living costs while cruising (berthing, insurance, subscriptions).</p>
                         </div>
                         <div>
                             <label for="phase3VariableExpenses" class="block text-sm font-medium text-gray-700">Variable Monthly Expenses ($)</label>
-                            <input type="number" id="phase3VariableExpenses" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="phase3VariableExpenses" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Variable monthly costs while cruising (fuel, food, spare parts).</p>
                         </div>
                         <div>
                             <label for="phase3MaintenanceFund" class="block text-sm font-medium text-gray-700">Maintenance Fund (Monthly) ($)</label>
-                            <input type="number" id="phase3MaintenanceFund" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <input type="number" step="1" id="phase3MaintenanceFund" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                            <p class="text-xs text-gray-500 mt-1">Monthly allocation to maintenance reserve for larger repairs.</p>
                         </div>
                     </div>
                 </section>
@@ -618,14 +713,17 @@
                             <div>
                                 <label for="capExItem" class="block text-sm font-medium text-gray-700">Item</label>
                                 <input type="text" id="capExItem" placeholder="e.g., Engine" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                                <p class="text-xs text-gray-500 mt-1">Short label for the planned expenditure.</p>
                             </div>
                             <div>
                                 <label for="capExCost" class="block text-sm font-medium text-gray-700">Cost ($)</label>
-                                <input type="number" id="capExCost" placeholder="e.g., 15000" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                                <input type="number" step="1" id="capExCost" placeholder="e.g., 15000" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                                <p class="text-xs text-gray-500 mt-1">Expected cost in today's dollars.</p>
                             </div>
                             <div>
                                 <label for="capExYear" class="block text-sm font-medium text-gray-700">Year</label>
-                                <input type="number" id="capExYear" placeholder="e.g., 12" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                                <input type="number" step="1" id="capExYear" placeholder="e.g., 12" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm p-2">
+                                <p class="text-xs text-gray-500 mt-1">Year number in the projection when this cost will occur (1 = first year).</p>
                             </div>
                         </div>
                         <button id="addCapEx" class="w-full bg-yellow-400 text-yellow-900 py-2 rounded-md font-semibold hover:bg-yellow-500 transition-colors">Add Expenditure</button>
